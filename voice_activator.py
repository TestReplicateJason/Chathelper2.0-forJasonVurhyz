import speech_recognition as sr
from config import ACTIVATION_WORD, ENERGY_THRESHOLD, PAUSE_THRESHOLD, LANGUAGE
import time

class VoiceActivator:
    def __init__(self):
        self.recognizer = sr.Recognizer()
        self.microphone = sr.Microphone()
        self.setup_microphone()
        self.active = False

    def setup_microphone(self):
        with self.microphone as source:
            self.recognizer.adjust_for_ambient_noise(source)
        self.recognizer.energy_threshold = ENERGY_THRESHOLD
        self.recognizer.pause_threshold = PAUSE_THRESHOLD

    def listen_for_activation(self, callback):
        """–°–ª—É—à–∞–µ—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –∏ –≤—ã–∑—ã–≤–∞–µ—Ç callback –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏"""
        print(f"üü° –û–∂–∏–¥–∞—é –∞–∫—Ç–∏–≤–∞—Ü–∏—é (—Å–∫–∞–∂–∏—Ç–µ '{ACTIVATION_WORD}')...")
        
        while True:
            try:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–¥–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
                with self.microphone as source:
                    audio = self.recognizer.listen(source, phrase_time_limit=3)
                
                text = self.recognizer.recognize_google(audio, language=LANGUAGE).lower()
                
                if ACTIVATION_WORD in text:
                    print("üü¢ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ì–æ–≤–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É...")
                    self.active = True
                    callback()
                else:
                    print(f"üî¥ –ù–µ –∞–∫—Ç–∏–≤–∞—Ü–∏—è: '{text}'")
                    
            except sr.UnknownValueError:
                pass
            except sr.RequestError as e:
                print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: {e}")
            except sr.WaitTimeoutError:
                pass
            except Exception as e:
                print(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
            time.sleep(0.1)

    def listen_for_command(self):
        """–°–ª—É—à–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏"""
        try:
            print("üé§ –°–ª—É—à–∞—é –∫–æ–º–∞–Ω–¥—É...")
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
            with self.microphone as source:
                audio = self.recognizer.listen(source, timeout=5, phrase_time_limit=10)
            
            return self.recognizer.recognize_google(audio, language=LANGUAGE)
        
        except sr.WaitTimeoutError:
            print("‚è≥ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –∏—Å—Ç–µ–∫–ª–æ")
            self.active = False
            return None
        except sr.UnknownValueError:
            print("üîá –†–µ—á—å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞")
            self.active = False
            return None
        except sr.RequestError as e:
            print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")
            self.active = False
            return None
        except Exception as e:
            print(f"–î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {e}")
            self.active = False
            return None